(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const i of e)if(i.type==="childList")for(const n of i.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&r(n)}).observe(document,{childList:!0,subtree:!0});function s(e){const i={};return e.integrity&&(i.integrity=e.integrity),e.referrerPolicy&&(i.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?i.credentials="include":e.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function r(e){if(e.ep)return;e.ep=!0;const i=s(e);fetch(e.href,i)}})();class u{constructor(t,s,r){this.root=t,this.configUrl=s,this.atlasUrl=r,this.app=null,this.textureFrames=null}async init(){this.config=await(await fetch(this.configUrl)).json();const{width:t,height:s,targetFps:r}=this.config.game;this.app=new PIXI.Application({width:t,height:s,background:7981163,antialias:!0}),this.root.appendChild(this.app.view),this.app.ticker.maxFPS=r||60,this.scene=new PIXI.Container,this.linesLayer=new PIXI.Container,this.unitsLayer=new PIXI.Container,this.towersLayer=new PIXI.Container,this.scene.addChild(this.linesLayer,this.unitsLayer,this.towersLayer),this.app.stage.addChild(this.scene);try{const e=await fetch(this.atlasUrl);if(e.ok){const i=await e.json(),n=this.atlasUrl.substring(0,this.atlasUrl.lastIndexOf("/")),o=i.meta.image||i.meta.images&&i.meta.images[0],l=await PIXI.Assets.load(n+"/"+o);this.textureFrames={};for(const[h,a]of Object.entries(i.frames))this.textureFrames[h]=new PIXI.Texture({source:l.source,frame:new PIXI.Rectangle(a.frame.x,a.frame.y,a.frame.w,a.frame.h)})}}catch{console.warn("Atlas not found/invalid â€” using vector placeholders.")}this.makeLevel(),this.makeInput(),this.resize()}run(){this.last=performance.now(),this.app.ticker.add(t=>{const s=performance.now(),r=(s-this.last)/1e3;this.last=s,this.update(r)})}resize(){const{innerWidth:t,innerHeight:s}=window,{width:r,height:e}=this.config.game,i=Math.min(t/r,s/e),n=this.app.view;n.style.width=`${r*i}px`,n.style.height=`${e*i}px`}makeLevel(){const t=[250,500,800,1120,1420,1700],s=[200,400,540,740,940],r=[[2,0,"neutral"],[1,1,"neutral"],[3,1,"neutral"],[0,2,"neutral"],[2,2,"neutral"],[4,2,"neutral"],[1,3,"neutral"],[3,3,"neutral"],[2,5,"neutral"]];this.towersLayer.removeChildren(),this.unitsLayer.removeChildren(),this.linesLayer.removeChildren(),this.towers=[];for(const[e,i,n]of r){const o=s[e],l=t[i],h=this.createTower(o,l,n);this.towers.push(h)}this.towers[0].owner="red",this.towers[this.towers.length-1].owner="blue";for(const e of this.towers)this.refreshTowerVisual(e);this.gameTimer=this.config.game.timerSeconds,this.growthTimer=0,this.botTimer=0,this.units=[],this.links=[],this.drag={from:null,line:null},this.updateScores()}createTower(t,s,r="neutral"){const i={x:t,y:s,owner:r,garrison:r==="neutral"?this.config.start.neutralGarrison:14,level:1,radius:46,gfx:new PIXI.Container,label:new PIXI.Text("",{fontFamily:"Arial",fontSize:18,fill:16777215,stroke:0,strokeThickness:4})};return i.gfx.eventMode="static",i.gfx.cursor="pointer",i.gfx.x=t,i.gfx.y=s,this.towersLayer.addChild(i.gfx),i.gfx.on("pointerdown",n=>this.onPointerDownTower(i,n)),i.gfx.on("pointerup",n=>this.onPointerUpTower(i,n)),i.gfx.on("pointerupoutside",n=>this.onPointerUpOutside(n)),i}towerColor(t){const s=this.config.start;return Number(t==="blue"?s.playerColor:t==="red"?s.botColor:s.neutralColor)}levelForCount(t){for(const s of this.config.towerLevels)if(t>=s.min&&t<=s.max)return s.level;return 3}refreshTowerVisual(t){t.gfx.removeChildren();const s=this.towerColor(t.owner);if(this.textureFrames){const a=t.owner==="blue"?"tower_blue":t.owner==="red"?"tower_red":"tower_neutral",c=this.textureFrames[a];if(c){const f=new PIXI.Sprite(c);f.anchor.set(.5),t.gfx.addChild(f)}else this.drawTowerVector(t,s)}else this.drawTowerVector(t,s);const r=t.garrison>50?"MAX":String(t.garrison);t.label.text=r,t.label.anchor.set(.5),t.label.y=-60,t.gfx.addChild(t.label);const e=this.levelForCount(t.garrison),i=new PIXI.Graphics,n=12,o=6,l=3,h=-48/2+n/2;for(let a=0;a<l;a++){const c=a<e?s:5592405;i.beginFill(c).drawRect(h+a*(n+o),68,n,8).endFill()}t.gfx.addChild(i)}drawTowerVector(t,s){const r=new PIXI.Graphics().lineStyle(4,0,.2).beginFill(s,.95).drawRoundedRect(-42,-42,84,84,14).endFill();t.gfx.addChild(r);const e=new PIXI.Graphics().lineStyle(6,0,.25).drawCircle(0,0,t.radius);t.gfx.addChild(e);const i=new PIXI.Graphics().beginFill(s).drawCircle(0,0,8).endFill();i.y=54,t.gfx.addChild(i)}onPointerDownTower(t){if(t.owner!=="blue")return;this.drag.from=t,this.drag.line=new PIXI.Graphics,this.linesLayer.addChild(this.drag.line);const s=r=>{const e=this.scene.toLocal(r.global);this.drawTempLine(t.x,t.y,e.x,e.y)};this.stageMoveHandler=s,this.app.stage.on("pointermove",s)}onPointerUpTower(t){if(this.drag.from){if(t===this.drag.from){this.clearDrag();return}if(t.owner==="blue"){this.clearDrag();return}this.addLink(this.drag.from,t),this.clearDrag()}}onPointerUpOutside(){this.clearDrag()}clearDrag(){this.stageMoveHandler&&this.app.stage.off("pointermove",this.stageMoveHandler),this.drag.line&&this.drag.line.destroy(),this.drag={from:null,line:null},this.stageMoveHandler=null}drawTempLine(t,s,r,e){const i=this.drag.line;i.clear(),i.lineStyle(6,16777215,.5).moveTo(t,s).lineTo(r,e)}addLink(t,s){this.links=this.links.filter(e=>!(e.from===t&&e.to===s));const r=new PIXI.Graphics().lineStyle(6,16777215,.25).moveTo(t.x,t.y).lineTo(s.x,s.y);this.linesLayer.addChild(r),this.links.push({from:t,to:s,emitTimer:0,line:r})}makeUnit(t){const s=this.towerColor(t);if(this.textureFrames){const e=t==="blue"?"unit_blue":"unit_red",i=this.textureFrames[e];if(i){const n=new PIXI.Sprite(i);return n.anchor.set(.5),n}}return new PIXI.Graphics().beginFill(s).drawCircle(0,0,this.config.balance.unitRadius).endFill()}emitUnit(t,s,r){const e=this.makeUnit(r),i={owner:r,x:t.x,y:t.y,targetX:s.x,targetY:s.y,gfx:e,alive:!0};e.x=i.x,e.y=i.y,this.unitsLayer.addChild(e),this.units.push(i)}update(t){if(this.gameTimer-=t,this.gameTimer<0&&(this.gameTimer=0),document.getElementById("timer").textContent=`${Math.ceil(this.gameTimer)}s`,this.gameTimer===0&&this.endIfFinished(!1),this.growthTimer+=t,this.growthTimer>=this.config.balance.garrisonGrowthInterval){this.growthTimer=0;for(const e of this.towers)e.garrison<50&&(e.garrison+=1,this.refreshTowerVisual(e));this.updateScores()}for(const e of this.links)e.emitTimer+=t,e.emitTimer>=this.config.balance.spawnIntervalFromTower&&(e.emitTimer=0,e.from.garrison>0&&(e.from.garrison-=1,this.refreshTowerVisual(e.from),this.emitUnit(e.from,e.to,e.from.owner),this.updateScores()));this.botTimer+=t,this.botTimer>=this.config.balance.botActionInterval&&(this.botTimer=0,this.botAct());const s=this.config.balance.unitSpeed;for(const e of this.units){if(!e.alive)continue;const i=e.targetX-e.x,n=e.targetY-e.y,o=Math.hypot(i,n);if(o<2){const a=this.towers.find(c=>c.x===e.targetX&&c.y===e.targetY);a&&(a.owner===e.owner?a.garrison<50&&(a.garrison+=1,this.refreshTowerVisual(a)):(a.garrison-=1,a.garrison<=0?(a.owner=e.owner,a.garrison=1,this.refreshTowerVisual(a)):this.refreshTowerVisual(a)),this.updateScores()),e.alive=!1,e.gfx.destroy&&e.gfx.destroy();continue}const l=i/o,h=n/o;e.x+=l*s*t,e.y+=h*s*t,e.gfx.x=e.x,e.gfx.y=e.y}this.units=this.units.filter(e=>e.alive);const r=this.config.balance.collisionResolveDistance;for(let e=0;e<this.units.length;e++){const i=this.units[e];if(i.alive)for(let n=e+1;n<this.units.length;n++){const o=this.units[n];if(!o.alive||i.owner===o.owner)continue;if(Math.hypot(i.x-o.x,i.y-o.y)<=r){i.alive=!1,o.alive=!1,i.gfx.destroy&&i.gfx.destroy(),o.gfx.destroy&&o.gfx.destroy();break}}}this.units=this.units.filter(e=>e.alive)}botAct(){const t=this.towers.filter(i=>i.owner==="red"&&i.garrison>3);if(t.length===0)return;const s=t[Math.random()*t.length|0],r=this.towers.filter(i=>i.owner!=="red");if(r.length===0)return;r.sort((i,n)=>this.dist(s,i)-this.dist(s,n));const e=r[0];this.addLink(s,e)}dist(t,s){const r=t.x-s.x,e=t.y-s.y;return Math.hypot(r,e)}updateScores(){let t=0,s=0;for(const e of this.towers){const i=Math.min(e.garrison,50);e.owner==="blue"?t+=i:e.owner==="red"&&(s+=i)}document.getElementById("scoreBlue").textContent=`Blue: ${t}`,document.getElementById("scoreRed").textContent=`Red: ${s}`;const r=new Set(this.towers.map(e=>e.owner));r.size===1&&(r.has("blue")||r.has("red"))&&this.endIfFinished(!0)}endIfFinished(t=!1){if(this.ended||!t&&this.gameTimer>0)return;this.ended=!0;const s=parseInt(document.getElementById("scoreBlue").textContent.split(": ")[1],10),r=parseInt(document.getElementById("scoreRed").textContent.split(": ")[1],10);let e="";t?e=(this.towers[0].owner==="blue"?"Blue":"Red")+" captured all towers!":s>r?e="Blue wins by score!":r>s?e="Red wins by score!":e="Draw!";const i=this.config.game.width,n=this.config.game.height,o=new PIXI.Graphics().beginFill(0,.6).drawRect(0,0,i,n).endFill(),l=new PIXI.Text(e+"\\nTap to restart",{fontSize:42,fontFamily:"Arial",fill:16777215,align:"center"});l.anchor.set(.5),l.x=i/2,l.y=n/2,o.addChild(l),o.eventMode="static",o.on("pointerdown",()=>{this.ended=!1,this.makeLevel(),this.scene.removeChild(o)}),this.scene.addChild(o)}makeInput(){this.app.stage.eventMode="static"}}(async function(){const t=document.getElementById("gameRoot"),s=new u(t,"./assets/config.json","./assets/atlas.json");window._game=s,await s.init(),window.addEventListener("resize",()=>s.resize()),s.run()})();
